// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: if/bapid.proto

#include "if/bapid.pb.h"
#include "if/bapid.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace bapid {

class MockBapidServiceStub : public BapidService::StubInterface {
 public:
  MOCK_METHOD3(Ping, ::grpc::Status(::grpc::ClientContext* context, const ::bapid::PingRequest& request, ::bapid::PingReply* response));
  MOCK_METHOD3(AsyncPingRaw, ::grpc::ClientAsyncResponseReaderInterface< ::bapid::PingReply>*(::grpc::ClientContext* context, const ::bapid::PingRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncPingRaw, ::grpc::ClientAsyncResponseReaderInterface< ::bapid::PingReply>*(::grpc::ClientContext* context, const ::bapid::PingRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(Shutdown, ::grpc::Status(::grpc::ClientContext* context, const ::bapid::Empty& request, ::bapid::Empty* response));
  MOCK_METHOD3(AsyncShutdownRaw, ::grpc::ClientAsyncResponseReaderInterface< ::bapid::Empty>*(::grpc::ClientContext* context, const ::bapid::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncShutdownRaw, ::grpc::ClientAsyncResponseReaderInterface< ::bapid::Empty>*(::grpc::ClientContext* context, const ::bapid::Empty& request, ::grpc::CompletionQueue* cq));
};

} // namespace bapid

